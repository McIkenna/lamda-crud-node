service: dynamodb-crud-api

provider: 
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-2
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.postsTableName}
  
  custom:
    postsTableName: posts-table-${self:provider.stage}
  
  plugins:
    - serverless-iam-roles-per-function
  
  functions:
    getPost:
      handler: api.getPost
      name: get-post
      memorySize: 128
      timeout: 5
      events: 
        - http:
            path: post/{postId}
            method: GET
      iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "dynamodb:GetItem"
          Resources: !GetAtt PostsTable.Arn
    createPost:
      handler: api.createPost
      name: create-post
      memorySize: 128
      timeout: 5
      events: 
        - http:
            path: post
            method: Post
      iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "dynamodb:CreateItem"
          Resources: !GetAtt PostsTable.Arn
  updatePost:
    handler: api.updatePost
    name: update-post
    memorySize: 128
    timeout: 5
    events: 
      - http:
          path: post/{postId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resources: !GetAtt PostsTable.Arn
  deletePost:
    handler: api.deletePost
    name: delete-post
    memorySize: 128
    timeout: 5
    events: 
      - http:
          path: post/{postId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resources: !GetAtt PostsTable.Arn
  getAllposts:
    handler: api.getAllPosts
    name: get-all-posts
    memorySize: 128
    timeout: 5
    events: 
      - http:
          path: posts
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resources: !GetAtt PostsTable.Arn

  resources:
    Resources:
      PostsTable:
        Type: AWS::DynamoDB::Table
        Properties: 
          TableName: ${self:custom.postsTableName}
          AtrributeDefinitions:
            - AttributeName: postId
              AttributeType: S
            KeySchema:
            - AttributeName: postId
              KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1